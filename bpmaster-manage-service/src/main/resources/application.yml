spring:
  application:
    name: bpmaster-manage-service

  # Config Server 완전 비활성화
  config:
    import: "optional:configserver:"
  cloud:
    config:
      enabled: false
      import-check:
        enabled: false

  # Spring Cloud Config Server 설정 (필요 시 활성화)
#  config:
#    import: optional:configserver:http://localhost:8888
#  cloud:
#    config:
#      uri: http://localhost:8888
#      username: devgrr
#      password: qwer1234
#      fail-fast: false
#      retry:
#        initial-interval: 1000
#        max-attempts: 6
#        max-interval: 2000
#        multiplier: 1.1

  # R2DBC PostgreSQL 연결 설정
  r2dbc:
    url: r2dbc:postgresql://localhost:5432/whaleerpdb
    username: whaleerp
    password: whaleerp12345!@
    pool:
      enabled: true
      initial-size: 5
      max-size: 20
      max-idle-time: 30m
      max-acquire-time: 5s
      max-create-connection-time: 5s
      validation-query: SELECT 1

  # Spring Data R2DBC 설정
  data:
    r2dbc:
      repositories:
        enabled: true

  # WebFlux 설정
  webflux:
    problemdetails:
      enabled: true

# Eureka Client 설정
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
    registry-fetch-interval-seconds: 30
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    metadata-map:
      zone: primary
      version: 1.0.0

# 서버 설정
server:
  port: 0  # 랜덤 포트 (Eureka에서 동적 할당)
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: on_param
    include-exception: false

# Actuator 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers,prometheus
      base-path: /actuator
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true
  health:
    circuitbreakers:
      enabled: true

# Resilience4j Circuit Breaker 설정
resilience4j:
  circuitbreaker:
    configs:
      default:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        wait-duration-in-open-state: 10s
        failure-rate-threshold: 50
        slow-call-rate-threshold: 50
        slow-call-duration-threshold: 2s
        automatic-transition-from-open-to-half-open-enabled: true
    instances:
      bpmaster-service:
        base-config: default

  timelimiter:
    configs:
      default:
        timeout-duration: 3s
    instances:
      bpmaster-service:
        base-config: default

# 로깅 설정
logging:
  level:
    root: INFO
    com.interplug.bpmastermanageservice: DEBUG
    org.springframework.r2dbc: DEBUG
    org.springframework.data.r2dbc: DEBUG
    io.r2dbc.postgresql: DEBUG
    org.springframework.cloud.config: INFO
    com.netflix.discovery: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/bpmaster-manage-service.log
    max-size: 10MB
    max-history: 30

# SpringDoc OpenAPI 설정
springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    operations-sorter: method
    tags-sorter: alpha
    doc-expansion: none
    display-request-duration: true
    display-operation-id: false
    default-models-expand-depth: 1
    default-model-expand-depth: 1
    disable-swagger-default-url: false
    use-root-path: true
    persist-authorization: true
  api-docs:
    path: /v3/api-docs
    enabled: true
  show-actuator: true
  packages-to-scan: com.interplug.bpmastermanageservice
  paths-to-match: /**
  default-produces-media-type: application/json
  default-consumes-media-type: application/json
  writer-with-default-pretty-printer: true

# 개발 환경 설정
spring.devtools:
  restart:
    enabled: true
  livereload:
    enabled: true